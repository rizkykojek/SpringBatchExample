<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:batch="http://www.springframework.org/schema/batch" 
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/batch
		http://www.springframework.org/schema/batch/spring-batch-2.2.xsd
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/task
		http://www.springframework.org/schema/task/spring-task-3.2.xsd">

    <bean id="report" class="com.mkyong.model.Report" scope="prototype" />
    <bean id="listener" class="com.mkyong.listener.ReportJobListener" scope="singleton"/>
    <bean id="partitioner" class="com.mkyong.partition.ModulePartitioner" scope="singleton"/>
    
    <task:executor id="executor" pool-size="50"/>
    
	<batch:job id="reportJob">
		<batch:step id="step1">
			<batch:partition partitioner="partitioner">
				<batch:step>			
					<batch:tasklet throttle-limit="1">
						<batch:chunk reader="cvsFileItemReader" writer="mysqlItemWriter"
							commit-interval="30">
						</batch:chunk>
					</batch:tasklet>
				</batch:step>
				<batch:handler task-executor="executor" grid-size="6"/>
			</batch:partition>			
		</batch:step>
		<batch:listeners>
			<batch:listener ref="listener"/>
		</batch:listeners>
	</batch:job>
	
	
	
	<bean id="cvsFileItemReader" class="org.springframework.batch.item.file.FlatFileItemReader">

		<!-- Read a csv file -->
		<property name="resource" value="classpath:cvs/report.csv" />
		<!-- Skip the line -->
		<property name="linesToSkip" value="1"/>
		
		<property name="lineMapper">
			<bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">

				<!-- split it -->
				<property name="lineTokenizer">
					<bean
						class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
						<property name="names" value="date,impressions,clicks,earning" />
					</bean>
				</property>

				<property name="fieldSetMapper">
				    
				    <!-- return back to reader, rather than a mapped object. -->
				    <!--
				    	<bean class="org.springframework.batch.item.file.mapping.PassThroughFieldSetMapper" />
				    -->
				      
					<!-- map to an object -->
					<bean
						class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
						<property name="prototypeBeanName" value="report" />
					</bean>
					
				</property>

			</bean>
		</property>

	</bean>

	<bean id="mysqlItemWriter"
		class="org.springframework.batch.item.database.JdbcBatchItemWriter">
		<property name="dataSource" ref="dataSource" />
		<property name="sql">
			<value>
            <![CDATA[        
            	insert into RAW_REPORT(DATE,IMPRESSIONS,CLICKS,EARNING) values (:date, :impressions, :clicks, :earning)
            ]]>
			</value>
		</property>
		<!-- It will take care matching between object property and sql name parameter -->
		<property name="itemSqlParameterSourceProvider">
			<bean
				class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider" />
		</property>
	</bean>

</beans>
